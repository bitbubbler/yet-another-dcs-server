name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v3
        id: cache-generated
        with:
          path: generated
          key: ${{ runner.os }}-proto-${{ hashFiles('src/protos/**') }}
          restore-keys: |
            ${{ runner.os }}-proto-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
        if: steps.cache-generated.outputs.cache-hit != 'true'
      - run: npm run test -- --coverage
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest] # only run on ubuntu to save actions time
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v3
        id: cache-generated
        with:
          path: generated
          key: ${{ runner.os }}-proto-${{ hashFiles('src/protos/**') }}
          restore-keys: |
            ${{ runner.os }}-proto-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
        if: steps.cache-generated.outputs.cache-hit != 'true'
      - run: npm run lint
  typecheck:
    strategy:
      matrix:
        os: [ubuntu-latest] # only run on ubuntu to save actions time
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v3
        id: cache-generated
        with:
          path: generated
          key: ${{ runner.os }}-proto-${{ hashFiles('src/protos/**') }}
          restore-keys: |
            ${{ runner.os }}-proto-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
        if: steps.cache-generated.outputs.cache-hit != 'true'
      - run: npm run typecheck
  prettier:
    strategy:
      matrix:
        os: [ubuntu-latest] # only run on ubuntu to save actions time
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v3
        id: cache-generated
        with:
          path: generated
          key: ${{ runner.os }}-proto-${{ hashFiles('src/protos/**') }}
          restore-keys: |
            ${{ runner.os }}-proto-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
        if: steps.cache-generated.outputs.cache-hit != 'true'
      - run: npm run prettier
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v3
        id: cache-generated
        with:
          path: generated
          key: ${{ runner.os }}-proto-${{ hashFiles('src/protos/**') }}
          restore-keys: |
            ${{ runner.os }}-proto-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
        if: steps.cache-generated.outputs.cache-hit != 'true'
      - run: npm run build
