name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v1
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
      - run: npm run test
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v1
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
      - run: npm run lint
  typecheck:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v1
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
      - run: npm run typecheck
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - uses: actions/cache@v1
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run codegen
      - run: npm run build
